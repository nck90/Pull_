{
  "repo_name": "minimaxir/big-list-of-naughty-strings",
  "repo_url": "https://github.com/minimaxir/big-list-of-naughty-strings",
  "description": "The Big List of Naughty Strings is a list of strings which have a high probability of causing issues when used as user-input data.",
  "stars": 47015,
  "language": "Python",
  "created_at": "2015-08-08T20:57:20Z",
  "updated_at": "2025-03-18T14:14:33Z",
  "files": {
    "naughtystrings/__init__.py": "import os\n\n\nFILEPATH = os.path.join(\n    os.path.abspath(os.path.dirname(os.path.dirname(__file__))), 'blns.txt')\n\"\"\"Path to the file\"\"\"\n\n\ndef naughty_strings(filepath=FILEPATH):\n    \"\"\"Get the list of naughty_strings.\n\n    By default this will get the strings from the blns.txt file\n\n    Code is a simple port of what is already in the /scripts directory\n\n    :param filepath: Optional filepath the the blns.txt file\n    :returns: The list of naughty strings\n    \"\"\"\n\n    strings = []\n    with open(filepath, 'r') as f:\n\n        # put all lines in the file into a Python list\n        strings = f.readlines()\n        \n        # above line leaves trailing newline characters; strip them out\n        strings = [x.strip(u'\\n') for x in strings]\n        \n        # remove empty-lines and comments\n        strings = [x for x in strings if x and not x.startswith(u'#')]\n        \n        # insert empty string since all are being removed\n        strings.insert(0, u\"\")\n\n    return strings\n",
    "scripts/txt_to_json.py": "###\tQuick Python Script to convert the Big List of Naughty Strings into a JSON file\n### \n###\tBy Max Woolf\n\nimport json\n\nwith open('../blns.txt', 'r') as f:\n\n    # put all lines in the file into a Python list\n    content = f.readlines()\n    \n    # above line leaves trailing newline characters; strip them out\n    content = [x.strip('\\n') for x in content]\n    \n    # remove empty-lines and comments\n    content = [x for x in content if x and not x.startswith('#')]\n    \n    # insert empty string since all are being removed\n    content.insert(0, \"\")\n    \n    # special case: convert \"\\\" to \"\\\\\" for valid JSON\n    #content = map(lambda x: x.replace('\\','\\\\'), content)\n    \nwith open('../blns.json', 'wb') as f:\n\n\t# write JSON to file; note the ensure_ascii parameter\n\tjson.dump(content, f, indent=2, ensure_ascii=False)\n    \n"
  },
  "requirements": null
}