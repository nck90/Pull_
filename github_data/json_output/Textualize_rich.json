{
  "repo_name": "Textualize/rich",
  "repo_url": "https://github.com/Textualize/rich",
  "description": "Rich is a Python library for rich text and beautiful formatting in the terminal.",
  "stars": 51274,
  "language": "Python",
  "created_at": "2019-11-10T15:28:09Z",
  "updated_at": "2025-03-19T06:13:51Z",
  "files": {
    "tests/_card_render.py": "expected = \"\\x1b[3m                                           Rich features                                            \\x1b[0m\\n\\x1b[1;31m              \\x1b[0m                                                                                      \\n\\x1b[1;31m \\x1b[0m\\x1b[1;31m   Colors   \\x1b[0m\\x1b[1;31m \\x1b[0m✓ \\x1b[1;32m4-bit color\\x1b[0m                 \\x1b[38;2;86;0;0;48;2;51;0;0m▄\\x1b[0m\\x1b[38;2;86;9;0;48;2;51;5;0m▄\\x1b[0m\\x1b[38;2;86;18;0;48;2;51;11;0m▄\\x1b[0m\\x1b[38;2;86;28;0;48;2;51;16;0m▄\\x1b[0m\\x1b[38;2;86;37;0;48;2;51;22;0m▄\\x1b[0m\\x1b[38;2;86;47;0;48;2;51;27;0m▄\\x1b[0m\\x1b[38;2;86;56;0;48;2;51;33;0m▄\\x1b[0m\\x1b[38;2;86;66;0;48;2;51;38;0m▄\\x1b[0m\\x1b[38;2;86;75;0;48;2;51;44;0m▄\\x1b[0m\\x1b[38;2;86;85;0;48;2;51;50;0m▄\\x1b[0m\\x1b[38;2;78;86;0;48;2;46;51;0m▄\\x1b[0m\\x1b[38;2;69;86;0;48;2;40;51;0m▄\\x1b[0m\\x1b[38;2;59;86;0;48;2;35;51;0m▄\\x1b[0m\\x1b[38;2;50;86;0;48;2;29;51;0m▄\\x1b[0m\\x1b[38;2;40;86;0;48;2;24;51;0m▄\\x1b[0m\\x1b[38;2;31;86;0;48;2;18;51;0m▄\\x1b[0m\\x1b[38;2;22;86;0;48;2;12;51;0m▄\\x1b[0m\\x1b[38;2;12;86;0;48;2;7;51;0m▄\\x1b[0m\\x1b[38;2;3;86;0;48;2;1;51;0m▄\\x1b[0m\\x1b[38;2;0;86;6;48;2;0;51;3m▄\\x1b[0m\\x1b[38;2;0;86;15;48;2;0;51;9m▄\\x1b[0m\\x1b[38;2;0;86;25;48;2;0;51;14m▄\\x1b[0m\\x1b[38;2;0;86;34;48;2;0;51;20m▄\\x1b[0m\\x1b[38;2;0;86;44;48;2;0;51;25m▄\\x1b[0m\\x1b[38;2;0;86;53;48;2;0;51;31m▄\\x1b[0m\\x1b[38;2;0;86;63;48;2;0;51;37m▄\\x1b[0m\\x1b[38;2;0;86;72;48;2;0;51;42m▄\\x1b[0m\\x1b[38;2;0;86;81;48;2;0;51;48m▄\\x1b[0m\\x1b[38;2;0;81;86;48;2;0;48;51m▄\\x1b[0m\\x1b[38;2;0;72;86;48;2;0;42;51m▄\\x1b[0m\\x1b[38;2;0;63;86;48;2;0;37;51m▄\\x1b[0m\\x1b[38;2;0;53;86;48;2;0;31;51m▄\\x1b[0m\\x1b[38;2;0;44;86;48;2;0;25;51m▄\\x1b[0m\\x1b[38;2;0;34;86;48;2;0;20;51m▄\\x1b[0m\\x1b[38;2;0;25;86;48;2;0;14;51m▄\\x1b[0m\\x1b[38;2;0;15;86;48;2;0;9;51m▄\\x1b[0m\\x1b[38;2;0;6;86;48;2;0;3;51m▄\\x1b[0m\\x1b[38;2;3;0;86;48;2;1;0;51m▄\\x1b[0m\\x1b[38;2;12;0;86;48;2;7;0;51m▄\\x1b[0m\\x1b[38;2;22;0;86;48;2;12;0;51m▄\\x1b[0m\\x1b[38;2;31;0;86;48;2;18;0;51m▄\\x1b[0m\\x1b[38;2;40;0;86;48;2;24;0;51m▄\\x1b[0m\\x1b[38;2;50;0;86;48;2;29;0;51m▄\\x1b[0m\\x1b[38;2;59;0;86;48;2;35;0;51m▄\\x1b[0m\\x1b[38;2;69;0;86;48;2;40;0;51m▄\\x1b[0m\\x1b[38;2;78;0;86;48;2;46;0;51m▄\\x1b[0m\\x1b[38;2;86;0;85;48;2;51;0;50m▄\\x1b[0m\\x1b[38;2;86;0;75;48;2;51;0;44m▄\\x1b[0m\\x1b[38;2;86;0;66;48;2;51;0;38m▄\\x1b[0m\\x1b[38;2;86;0;56;48;2;51;0;33m▄\\x1b[0m\\x1b[38;2;86;0;47;48;2;51;0;27m▄\\x1b[0m\\x1b[38;2;86;0;37;48;2;51;0;22m▄\\x1b[0m\\x1b[38;2;86;0;28;48;2;51;0;16m▄\\x1b[0m\\x1b[38;2;86;0;18;48;2;51;0;11m▄\\x1b[0m\\x1b[38;2;86;0;9;48;2;51;0;5m▄\\x1b[0m \\n\\x1b[1;31m              \\x1b[0m✓ \\x1b[1;34m8-bit color\\x1b[0m                 \\x1b[38;2;158;0;0;48;2;122;0;0m▄\\x1b[0m\\x1b[38;2;158;17;0;48;2;122;13;0m▄\\x1b[0m\\x1b[38;2;158;34;0;48;2;122;26;0m▄\\x1b[0m\\x1b[38;2;158;51;0;48;2;122;40;0m▄\\x1b[0m\\x1b[38;2;158;68;0;48;2;122;53;0m▄\\x1b[0m\\x1b[38;2;158;86;0;48;2;122;66;0m▄\\x1b[0m\\x1b[38;2;158;103;0;48;2;122;80;0m▄\\x1b[0m\\x1b[38;2;158;120;0;48;2;122;93;0m▄\\x1b[0m\\x1b[38;2;158;137;0;48;2;122;106;0m▄\\x1b[0m\\x1b[38;2;158;155;0;48;2;122;120;0m▄\\x1b[0m\\x1b[38;2;143;158;0;48;2;111;122;0m▄\\x1b[0m\\x1b[38;2;126;158;0;48;2;97;122;0m▄\\x1b[0m\\x1b[38;2;109;158;0;48;2;84;122;0m▄\\x1b[0m\\x1b[38;2;91;158;0;48;2;71;122;0m▄\\x1b[0m\\x1b[38;2;74;158;0;48;2;57;122;0m▄\\x1b[0m\\x1b[38;2;57;158;0;48;2;44;122;0m▄\\x1b[0m\\x1b[38;2;40;158;0;48;2;31;122;0m▄\\x1b[0m\\x1b[38;2;22;158;0;48;2;17;122;0m▄\\x1b[0m\\x1b[38;2;5;158;0;48;2;4;122;0m▄\\x1b[0m\\x1b[38;2;0;158;11;48;2;0;122;8m▄\\x1b[0m\\x1b[38;2;0;158;28;48;2;0;122;22m▄\\x1b[0m\\x1b[38;2;0;158;45;48;2;0;122;35m▄\\x1b[0m\\x1b[38;2;0;158;63;48;2;0;122;48m▄\\x1b[0m\\x1b[38;2;0;158;80;48;2;0;122;62m▄\\x1b[0m\\x1b[38;2;0;158;97;48;2;0;122;75m▄\\x1b[0m\\x1b[38;2;0;158;114;48;2;0;122;89m▄\\x1b[0m\\x1b[38;2;0;158;132;48;2;0;122;102m▄\\x1b[0m\\x1b[38;2;0;158;149;48;2;0;122;115m▄\\x1b[0m\\x1b[38;2;0;149;158;48;2;0;115;122m▄\\x1b[0m\\x1b[38;2;0;132;158;48;2;0;102;122m▄\\x1b[0m\\x1b[38;2;0;114;158;48;2;0;89;122m▄\\x1b[0m\\x1b[38;2;0;97;158;48;2;0;75;122m▄\\x1b[0m\\x1b[38;2;0;80;158;48;2;0;62;122m▄\\x1b[0m\\x1b[38;2;0;63;158;48;2;0;48;122m▄\\x1b[0m\\x1b[38;2;0;45;158;48;2;0;35;122m▄\\x1b[0m\\x1b[38;2;0;28;158;48;2;0;22;122m▄\\x1b[0m\\x1b[38;2;0;11;158;48;2;0;8;122m▄\\x1b[0m\\x1b[38;2;5;0;158;48;2;4;0;122m▄\\x1b[0m\\x1b[38;2;22;0;158;48;2;17;0;122m▄\\x1b[0m\\x1b[38;2;40;0;158;48;2;31;0;122m▄\\x1b[0m\\x1b[38;2;57;0;158;48;2;44;0;122m▄\\x1b[0m\\x1b[38;2;74;0;158;48;2;57;0;122m▄\\x1b[0m\\x1b[38;2;91;0;158;48;2;71;0;122m▄\\x1b[0m\\x1b[38;2;109;0;158;48;2;84;0;122m▄\\x1b[0m\\x1b[38;2;126;0;158;48;2;97;0;122m▄\\x1b[0m\\x1b[38;2;143;0;158;48;2;111;0;122m▄\\x1b[0m\\x1b[38;2;158;0;155;48;2;122;0;120m▄\\x1b[0m\\x1b[38;2;158;0;137;48;2;122;0;106m▄\\x1b[0m\\x1b[38;2;158;0;120;48;2;122;0;93m▄\\x1b[0m\\x1b[38;2;158;0;103;48;2;122;0;80m▄\\x1b[0m\\x1b[38;2;158;0;86;48;2;122;0;66m▄\\x1b[0m\\x1b[38;2;158;0;68;48;2;122;0;53m▄\\x1b[0m\\x1b[38;2;158;0;51;48;2;122;0;40m▄\\x1b[0m\\x1b[38;2;158;0;34;48;2;122;0;26m▄\\x1b[0m\\x1b[38;2;158;0;17;48;2;122;0;13m▄\\x1b[0m \\n\\x1b[1;31m              \\x1b[0m✓ \\x1b[1;35mTruecolor (16.7 million)\\x1b[0m    \\x1b[38;2;229;0;0;48;2;193;0;0m▄\\x1b[0m\\x1b[38;2;229;25;0;48;2;193;21;0m▄\\x1b[0m\\x1b[38;2;229;50;0;48;2;193;42;0m▄\\x1b[0m\\x1b[38;2;229;75;0;48;2;193;63;0m▄\\x1b[0m\\x1b[38;2;229;100;0;48;2;193;84;0m▄\\x1b[0m\\x1b[38;2;229;125;0;48;2;193;105;0m▄\\x1b[0m\\x1b[38;2;229;150;0;48;2;193;126;0m▄\\x1b[0m\\x1b[38;2;229;175;0;48;2;193;147;0m▄\\x1b[0m\\x1b[38;2;229;200;0;48;2;193;169;0m▄\\x1b[0m\\x1b[38;2;229;225;0;48;2;193;190;0m▄\\x1b[0m\\x1b[38;2;208;229;0;48;2;176;193;0m▄\\x1b[0m\\x1b[38;2;183;229;0;48;2;155;193;0m▄\\x1b[0m\\x1b[38;2;158;229;0;48;2;133;193;0m▄\\x1b[0m\\x1b[38;2;133;229;0;48;2;112;193;0m▄\\x1b[0m\\x1b[38;2;108;229;0;48;2;91;193;0m▄\\x1b[0m\\x1b[38;2;83;229;0;48;2;70;193;0m▄\\x1b[0m\\x1b[38;2;58;229;0;48;2;49;193;0m▄\\x1b[0m\\x1b[38;2;33;229;0;48;2;28;193;0m▄\\x1b[0m\\x1b[38;2;8;229;0;48;2;7;193;0m▄\\x1b[0m\\x1b[38;2;0;229;16;48;2;0;193;14m▄\\x1b[0m\\x1b[38;2;0;229;41;48;2;0;193;35m▄\\x1b[0m\\x1b[38;2;0;229;66;48;2;0;193;56m▄\\x1b[0m\\x1b[38;2;0;229;91;48;2;0;193;77m▄\\x1b[0m\\x1b[38;2;0;229;116;48;2;0;193;98m▄\\x1b[0m\\x1b[38;2;0;229;141;48;2;0;193;119m▄\\x1b[0m\\x1b[38;2;0;229;166;48;2;0;193;140m▄\\x1b[0m\\x1b[38;2;0;229;191;48;2;0;193;162m▄\\x1b[0m\\x1b[38;2;0;229;216;48;2;0;193;183m▄\\x1b[0m\\x1b[38;2;0;216;229;48;2;0;183;193m▄\\x1b[0m\\x1b[38;2;0;191;229;48;2;0;162;193m▄\\x1b[0m\\x1b[38;2;0;166;229;48;2;0;140;193m▄\\x1b[0m\\x1b[38;2;0;141;229;48;2;0;119;193m▄\\x1b[0m\\x1b[38;2;0;116;229;48;2;0;98;193m▄\\x1b[0m\\x1b[38;2;0;91;229;48;2;0;77;193m▄\\x1b[0m\\x1b[38;2;0;66;229;48;2;0;56;193m▄\\x1b[0m\\x1b[38;2;0;41;229;48;2;0;35;193m▄\\x1b[0m\\x1b[38;2;0;16;229;48;2;0;14;193m▄\\x1b[0m\\x1b[38;2;8;0;229;48;2;7;0;193m▄\\x1b[0m\\x1b[38;2;33;0;229;48;2;28;0;193m▄\\x1b[0m\\x1b[38;2;58;0;229;48;2;49;0;193m▄\\x1b[0m\\x1b[38;2;83;0;229;48;2;70;0;193m▄\\x1b[0m\\x1b[38;2;108;0;229;48;2;91;0;193m▄\\x1b[0m\\x1b[38;2;133;0;229;48;2;112;0;193m▄\\x1b[0m\\x1b[38;2;158;0;229;48;2;133;0;193m▄\\x1b[0m\\x1b[38;2;183;0;229;48;2;155;0;193m▄\\x1b[0m\\x1b[38;2;208;0;229;48;2;176;0;193m▄\\x1b[0m\\x1b[38;2;229;0;225;48;2;193;0;190m▄\\x1b[0m\\x1b[38;2;229;0;200;48;2;193;0;169m▄\\x1b[0m\\x1b[38;2;229;0;175;48;2;193;0;147m▄\\x1b[0m\\x1b[38;2;229;0;150;48;2;193;0;126m▄\\x1b[0m\\x1b[38;2;229;0;125;48;2;193;0;105m▄\\x1b[0m\\x1b[38;2;229;0;100;48;2;193;0;84m▄\\x1b[0m\\x1b[38;2;229;0;75;48;2;193;0;63m▄\\x1b[0m\\x1b[38;2;229;0;50;48;2;193;0;42m▄\\x1b[0m\\x1b[38;2;229;0;25;48;2;193;0;21m▄\\x1b[0m \\n\\x1b[1;31m              \\x1b[0m✓ \\x1b[1;33mDumb terminals\\x1b[0m              \\x1b[38;2;254;45;45;48;2;255;10;10m▄\\x1b[0m\\x1b[38;2;254;68;45;48;2;255;36;10m▄\\x1b[0m\\x1b[38;2;254;91;45;48;2;255;63;10m▄\\x1b[0m\\x1b[38;2;254;114;45;48;2;255;90;10m▄\\x1b[0m\\x1b[38;2;254;137;45;48;2;255;117;10m▄\\x1b[0m\\x1b[38;2;254;159;45;48;2;255;143;10m▄\\x1b[0m\\x1b[38;2;254;182;45;48;2;255;170;10m▄\\x1b[0m\\x1b[38;2;254;205;45;48;2;255;197;10m▄\\x1b[0m\\x1b[38;2;254;228;45;48;2;255;223;10m▄\\x1b[0m\\x1b[38;2;254;251;45;48;2;255;250;10m▄\\x1b[0m\\x1b[38;2;235;254;45;48;2;232;255;10m▄\\x1b[0m\\x1b[38;2;213;254;45;48;2;206;255;10m▄\\x1b[0m\\x1b[38;2;190;254;45;48;2;179;255;10m▄\\x1b[0m\\x1b[38;2;167;254;45;48;2;152;255;10m▄\\x1b[0m\\x1b[38;2;144;254;45;48;2;125;255;10m▄\\x1b[0m\\x1b[38;2;121;254;45;48;2;99;255;10m▄\\x1b[0m\\x1b[38;2;99;254;45;48;2;72;255;10m▄\\x1b[0m\\x1b[38;2;76;254;45;48;2;45;255;10m▄\\x1b[0m\\x1b[38;2;53;254;45;48;2;19;255;10m▄\\x1b[0m\\x1b[38;2;45;254;61;48;2;10;255;28m▄\\x1b[0m\\x1b[38;2;45;254;83;48;2;10;255;54m▄\\x1b[0m\\x1b[38;2;45;254;106;48;2;10;255;81m▄\\x1b[0m\\x1b[38;2;45;254;129;48;2;10;255;108m▄\\x1b[0m\\x1b[38;2;45;254;152;48;2;10;255;134m▄\\x1b[0m\\x1b[38;2;45;254;175;48;2;10;255;161m▄\\x1b[0m\\x1b[38;2;45;254;197;48;2;10;255;188m▄\\x1b[0m\\x1b[38;2;45;254;220;48;2;10;255;214m▄\\x1b[0m\\x1b[38;2;45;254;243;48;2;10;255;241m▄\\x1b[0m\\x1b[38;2;45;243;254;48;2;10;241;255m▄\\x1b[0m\\x1b[38;2;45;220;254;48;2;10;214;255m▄\\x1b[0m\\x1b[38;2;45;197;254;48;2;10;188;255m▄\\x1b[0m\\x1b[38;2;45;175;254;48;2;10;161;255m▄\\x1b[0m\\x1b[38;2;45;152;254;48;2;10;134;255m▄\\x1b[0m\\x1b[38;2;45;129;254;48;2;10;108;255m▄\\x1b[0m\\x1b[38;2;45;106;254;48;2;10;81;255m▄\\x1b[0m\\x1b[38;2;45;83;254;48;2;10;54;255m▄\\x1b[0m\\x1b[38;2;45;61;254;48;2;10;28;255m▄\\x1b[0m\\x1b[38;2;53;45;254;48;2;19;10;255m▄\\x1b[0m\\x1b[38;2;76;45;254;48;2;45;10;255m▄\\x1b[0m\\x1b[38;2;99;45;254;48;2;72;10;255m▄\\x1b[0m\\x1b[38;2;121;45;254;48;2;99;10;255m▄\\x1b[0m\\x1b[38;2;144;45;254;48;2;125;10;255m▄\\x1b[0m\\x1b[38;2;167;45;254;48;2;152;10;255m▄\\x1b[0m\\x1b[38;2;190;45;254;48;2;179;10;255m▄\\x1b[0m\\x1b[38;2;213;45;254;48;2;206;10;255m▄\\x1b[0m\\x1b[38;2;235;45;254;48;2;232;10;255m▄\\x1b[0m\\x1b[38;2;254;45;251;48;2;255;10;250m▄\\x1b[0m\\x1b[38;2;254;45;228;48;2;255;10;223m▄\\x1b[0m\\x1b[38;2;254;45;205;48;2;255;10;197m▄\\x1b[0m\\x1b[38;2;254;45;182;48;2;255;10;170m▄\\x1b[0m\\x1b[38;2;254;45;159;48;2;255;10;143m▄\\x1b[0m\\x1b[38;2;254;45;137;48;2;255;10;117m▄\\x1b[0m\\x1b[38;2;254;45;114;48;2;255;10;90m▄\\x1b[0m\\x1b[38;2;254;45;91;48;2;255;10;63m▄\\x1b[0m\\x1b[38;2;254;45;68;48;2;255;10;36m▄\\x1b[0m \\n\\x1b[1;31m              \\x1b[0m✓ \\x1b[1;36mAutomatic color conversion\\x1b[0m  \\x1b[38;2;255;117;117;48;2;255;81;81m▄\\x1b[0m\\x1b[38;2;255;132;117;48;2;255;100;81m▄\\x1b[0m\\x1b[38;2;255;147;117;48;2;255;119;81m▄\\x1b[0m\\x1b[38;2;255;162;117;48;2;255;138;81m▄\\x1b[0m\\x1b[38;2;255;177;117;48;2;255;157;81m▄\\x1b[0m\\x1b[38;2;255;192;117;48;2;255;176;81m▄\\x1b[0m\\x1b[38;2;255;207;117;48;2;255;195;81m▄\\x1b[0m\\x1b[38;2;255;222;117;48;2;255;214;81m▄\\x1b[0m\\x1b[38;2;255;237;117;48;2;255;232;81m▄\\x1b[0m\\x1b[38;2;255;252;117;48;2;255;251;81m▄\\x1b[0m\\x1b[38;2;242;255;117;48;2;239;255;81m▄\\x1b[0m\\x1b[38;2;227;255;117;48;2;220;255;81m▄\\x1b[0m\\x1b[38;2;212;255;117;48;2;201;255;81m▄\\x1b[0m\\x1b[38;2;197;255;117;48;2;182;255;81m▄\\x1b[0m\\x1b[38;2;182;255;117;48;2;163;255;81m▄\\x1b[0m\\x1b[38;2;167;255;117;48;2;144;255;81m▄\\x1b[0m\\x1b[38;2;152;255;117;48;2;125;255;81m▄\\x1b[0m\\x1b[38;2;137;255;117;48;2;106;255;81m▄\\x1b[0m\\x1b[38;2;122;255;117;48;2;87;255;81m▄\\x1b[0m\\x1b[38;2;117;255;127;48;2;81;255;94m▄\\x1b[0m\\x1b[38;2;117;255;142;48;2;81;255;113m▄\\x1b[0m\\x1b[38;2;117;255;157;48;2;81;255;132m▄\\x1b[0m\\x1b[38;2;117;255;172;48;2;81;255;150m▄\\x1b[0m\\x1b[38;2;117;255;187;48;2;81;255;169m▄\\x1b[0m\\x1b[38;2;117;255;202;48;2;81;255;188m▄\\x1b[0m\\x1b[38;2;117;255;217;48;2;81;255;207m▄\\x1b[0m\\x1b[38;2;117;255;232;48;2;81;255;226m▄\\x1b[0m\\x1b[38;2;117;255;247;48;2;81;255;245m▄\\x1b[0m\\x1b[38;2;117;247;255;48;2;81;245;255m▄\\x1b[0m\\x1b[38;2;117;232;255;48;2;81;226;255m▄\\x1b[0m\\x1b[38;2;117;217;255;48;2;81;207;255m▄\\x1b[0m\\x1b[38;2;117;202;255;48;2;81;188;255m▄\\x1b[0m\\x1b[38;2;117;187;255;48;2;81;169;255m▄\\x1b[0m\\x1b[38;2;117;172;255;48;2;81;150;255m▄\\x1b[0m\\x1b[38;2;117;157;255;48;2;81;132;255m▄\\x1b[0m\\x1b[38;2;117;142;255;48;2;81;113;255m▄\\x1b[0m\\x1b[38;2;117;127;255;48;2;81;94;255m▄\\x1b[0m\\x1b[38;2;122;117;255;48;2;87;81;255m▄\\x1b[0m\\x1b[38;2;137;117;255;48;2;106;81;255m▄\\x1b[0m\\x1b[38;2;152;117;255;48;2;125;81;255m▄\\x1b[0m\\x1b[38;2;167;117;255;48;2;144;81;255m▄\\x1b[0m\\x1b[38;2;182;117;255;48;2;163;81;255m▄\\x1b[0m\\x1b[38;2;197;117;255;48;2;182;81;255m▄\\x1b[0m\\x1b[38;2;212;117;255;48;2;201;81;255m▄\\x1b[0m\\x1b[38;2;227;117;255;48;2;220;81;255m▄\\x1b[0m\\x1b[38;2;242;117;255;48;2;239;81;255m▄\\x1b[0m\\x1b[38;2;255;117;252;48;2;255;81;251m▄\\x1b[0m\\x1b[38;2;255;117;237;48;2;255;81;232m▄\\x1b[0m\\x1b[38;2;255;117;222;48;2;255;81;214m▄\\x1b[0m\\x1b[38;2;255;117;207;48;2;255;81;195m▄\\x1b[0m\\x1b[38;2;255;117;192;48;2;255;81;176m▄\\x1b[0m\\x1b[38;2;255;117;177;48;2;255;81;157m▄\\x1b[0m\\x1b[38;2;255;117;162;48;2;255;81;138m▄\\x1b[0m\\x1b[38;2;255;117;147;48;2;255;81;119m▄\\x1b[0m\\x1b[38;2;255;117;132;48;2;255;81;100m▄\\x1b[0m \\n\\x1b[1;31m              \\x1b[0m                                                                                      \\n\\x1b[1;31m \\x1b[0m\\x1b[1;31m   Styles   \\x1b[0m\\x1b[1;31m \\x1b[0mAll ansi styles: \\x1b[1mbold\\x1b[0m, \\x1b[2mdim\\x1b[0m, \\x1b[3mitalic\\x1b[0m, \\x1b[4munderline\\x1b[0m, \\x1b[9mstrikethrough\\x1b[0m, \\x1b[7mreverse\\x1b[0m, and even       \\n\\x1b[1;31m              \\x1b[0m\\x1b[5mblink\\x1b[0m.                                                                                \\n\\x1b[1;31m              \\x1b[0m                                                                                      \\n\\x1b[1;31m \\x1b[0m\\x1b[1;31m    Text    \\x1b[0m\\x1b[1;31m \\x1b[0mWord wrap text. Justify \\x1b[32mleft\\x1b[0m, \\x1b[33mcenter\\x1b[0m, \\x1b[34mright\\x1b[0m or \\x1b[31mfull\\x1b[0m.                                  \\n\\x1b[1;31m              \\x1b[0m                                                                                      \\n\\x1b[1;31m              \\x1b[0m\\x1b[32mLorem ipsum dolor   \\x1b[0m \\x1b[33m Lorem ipsum dolor  \\x1b[0m \\x1b[34m   Lorem ipsum dolor\\x1b[0m \\x1b[31mLorem\\x1b[0m\\x1b[31m \\x1b[0m\\x1b[31mipsum\\x1b[0m\\x1b[31m \\x1b[0m\\x1b[31mdolor\\x1b[0m\\x1b[31m  \\x1b[0m\\x1b[31msit\\x1b[0m \\n\\x1b[1;31m              \\x1b[0m\\x1b[32msit amet,           \\x1b[0m \\x1b[33m     sit amet,      \\x1b[0m \\x1b[34m           sit amet,\\x1b[0m \\x1b[31mamet,\\x1b[0m\\x1b[31m      \\x1b[0m\\x1b[31mconsectetur\\x1b[0m \\n\\x1b[1;31m              \\x1b[0m\\x1b[32mconsectetur         \\x1b[0m \\x1b[33m    consectetur     \\x1b[0m \\x1b[34m         consectetur\\x1b[0m \\x1b[31madipiscing\\x1b[0m\\x1b[31m       \\x1b[0m\\x1b[31melit.\\x1b[0m \\n\\x1b[1;31m              \\x1b[0m\\x1b[32madipiscing elit.    \\x1b[0m \\x1b[33m  adipiscing elit.  \\x1b[0m \\x1b[34m    adipiscing elit.\\x1b[0m \\x1b[31mQuisque\\x1b[0m\\x1b[31m \\x1b[0m\\x1b[31min\\x1b[0m\\x1b[31m  \\x1b[0m\\x1b[31mmetus\\x1b[0m\\x1b[31m  \\x1b[0m\\x1b[31msed\\x1b[0m \\n\\x1b[1;31m              \\x1b[0m\\x1b[32mQuisque in metus sed\\x1b[0m \\x1b[33mQuisque in metus sed\\x1b[0m \\x1b[34mQuisque in metus sed\\x1b[0m \\x1b[31msapien\\x1b[0m\\x1b[31m       \\x1b[0m\\x1b[31multricies\\x1b[0m \\n\\x1b[1;31m              \\x1b[0m\\x1b[32msapien ultricies    \\x1b[0m \\x1b[33m  sapien ultricies  \\x1b[0m \\x1b[34m    sapien ultricies\\x1b[0m \\x1b[31mpretium\\x1b[0m\\x1b[31m  \\x1b[0m\\x1b[31ma\\x1b[0m\\x1b[31m  \\x1b[0m\\x1b[31mat\\x1b[0m\\x1b[31m  \\x1b[0m\\x1b[31mjusto.\\x1b[0m \\n\\x1b[1;31m              \\x1b[0m\\x1b[32mpretium a at justo. \\x1b[0m \\x1b[33mpretium a at justo. \\x1b[0m \\x1b[34m pretium a at justo.\\x1b[0m \\x1b[31mMaecenas\\x1b[0m\\x1b[31m \\x1b[0m\\x1b[31mluctus\\x1b[0m\\x1b[31m  \\x1b[0m\\x1b[31mvelit\\x1b[0m \\n\\x1b[1;31m              \\x1b[0m\\x1b[32mMaecenas luctus     \\x1b[0m \\x1b[33m  Maecenas luctus   \\x1b[0m \\x1b[34m     Maecenas luctus\\x1b[0m \\x1b[31met auctor maximus.\\x1b[0m     \\n\\x1b[1;31m              \\x1b[0m\\x1b[32mvelit et auctor     \\x1b[0m \\x1b[33m  velit et auctor   \\x1b[0m \\x1b[34m     velit et auctor\\x1b[0m                        \\n\\x1b[1;31m              \\x1b[0m\\x1b[32mmaximus.            \\x1b[0m \\x1b[33m      maximus.      \\x1b[0m \\x1b[34m            maximus.\\x1b[0m                        \\n\\x1b[1;31m              \\x1b[0m                                                                                      \\n\\x1b[1;31m \\x1b[0m\\x1b[1;31m   Asian    \\x1b[0m\\x1b[1;31m \\x1b[0m🇨🇳  该库支持中文，日文和韩文文本！                                                    \\n\\x1b[1;31m \\x1b[0m\\x1b[1;31m  language  \\x1b[0m\\x1b[1;31m \\x1b[0m🇯🇵  ライブラリは中国語、日本語、韓国語のテキストをサポートしています                  \\n\\x1b[1;31m \\x1b[0m\\x1b[1;31m  support   \\x1b[0m\\x1b[1;31m \\x1b[0m🇰🇷  이 라이브러리는 중국어, 일본어 및 한국어 텍스트를 지원합니다                      \\n\\x1b[1;31m              \\x1b[0m                                                                                      \\n\\x1b[1;31m \\x1b[0m\\x1b[1;31m   Markup   \\x1b[0m\\x1b[1;31m \\x1b[0m\\x1b[1;35mRich\\x1b[0m supports a simple \\x1b[3mbbcode\\x1b[0m-like \\x1b[1mmarkup\\x1b[0m for \\x1b[33mcolor\\x1b[0m, \\x1b[4mstyle\\x1b[0m, and emoji! 👍 🍎 🐜 🐻  … \\n\\x1b[1;31m              \\x1b[0m🚌                                                                                    \\n\\x1b[1;31m              \\x1b[0m                                                                                      \\n\\x1b[1;31m \\x1b[0m\\x1b[1;31m   Tables   \\x1b[0m\\x1b[1;31m \\x1b[0m\\x1b[1m \\x1b[0m\\x1b[1;32mDate\\x1b[0m\\x1b[1m        \\x1b[0m\\x1b[1m \\x1b[0m \\x1b[1m \\x1b[0m\\x1b[1;34mTitle\\x1b[0m\\x1b[1m                          \\x1b[0m\\x1b[1m \\x1b[0m \\x1b[1m \\x1b[0m\\x1b[1;36mProduction Budget\\x1b[0m\\x1b[1m \\x1b[0m \\x1b[1m \\x1b[0m\\x1b[1m    \\x1b[0m\\x1b[1;35mBox Office\\x1b[0m\\x1b[1m \\x1b[0m \\n\\x1b[1;31m              \\x1b[0m───────────────────────────────────────────────────────────────────────────────────── \\n\\x1b[1;31m              \\x1b[0m\\x1b[32m \\x1b[0m\\x1b[32mDec 20, 2019\\x1b[0m\\x1b[32m \\x1b[0m \\x1b[34m \\x1b[0m\\x1b[34mStar Wars: The Rise of         \\x1b[0m\\x1b[34m \\x1b[0m \\x1b[36m \\x1b[0m\\x1b[36m     $275,000,000\\x1b[0m\\x1b[36m \\x1b[0m \\x1b[35m \\x1b[0m\\x1b[35m  $375,126,118\\x1b[0m\\x1b[35m \\x1b[0m \\n\\x1b[1;31m              \\x1b[0m\\x1b[32m              \\x1b[0m \\x1b[34m \\x1b[0m\\x1b[34mSkywalker                      \\x1b[0m\\x1b[34m \\x1b[0m \\x1b[36m                   \\x1b[0m \\x1b[35m                \\x1b[0m \\n\\x1b[1;31m              \\x1b[0m\\x1b[2;32m \\x1b[0m\\x1b[2;32mMay 25, 2018\\x1b[0m\\x1b[2;32m \\x1b[0m \\x1b[2;34m \\x1b[0m\\x1b[1;2;34mSolo\\x1b[0m\\x1b[2;34m: A Star Wars Story        \\x1b[0m\\x1b[2;34m \\x1b[0m \\x1b[2;36m \\x1b[0m\\x1b[2;36m     $275,000,000\\x1b[0m\\x1b[2;36m \\x1b[0m \\x1b[2;35m \\x1b[0m\\x1b[2;35m  $393,151,347\\x1b[0m\\x1b[2;35m \\x1b[0m \\n\\x1b[1;31m              \\x1b[0m\\x1b[32m \\x1b[0m\\x1b[32mDec 15, 2017\\x1b[0m\\x1b[32m \\x1b[0m \\x1b[34m \\x1b[0m\\x1b[34mStar Wars Ep. VIII: The Last   \\x1b[0m\\x1b[34m \\x1b[0m \\x1b[36m \\x1b[0m\\x1b[36m     $262,000,000\\x1b[0m\\x1b[36m \\x1b[0m \\x1b[35m \\x1b[0m\\x1b[1;35m$1,332,539,889\\x1b[0m\\x1b[35m \\x1b[0m \\n\\x1b[1;31m              \\x1b[0m\\x1b[32m              \\x1b[0m \\x1b[34m \\x1b[0m\\x1b[34mJedi                           \\x1b[0m\\x1b[34m \\x1b[0m \\x1b[36m                   \\x1b[0m \\x1b[35m                \\x1b[0m \\n\\x1b[1;31m              \\x1b[0m\\x1b[2;32m \\x1b[0m\\x1b[2;32mMay 19, 1999\\x1b[0m\\x1b[2;32m \\x1b[0m \\x1b[2;34m \\x1b[0m\\x1b[2;34mStar Wars Ep. \\x1b[0m\\x1b[1;2;34mI\\x1b[0m\\x1b[2;34m: \\x1b[0m\\x1b[2;3;34mThe phantom \\x1b[0m\\x1b[2;34m  \\x1b[0m\\x1b[2;34m \\x1b[0m \\x1b[2;36m \\x1b[0m\\x1b[2;36m     $115,000,000\\x1b[0m\\x1b[2;36m \\x1b[0m \\x1b[2;35m \\x1b[0m\\x1b[2;35m$1,027,044,677\\x1b[0m\\x1b[2;35m \\x1b[0m \\n\\x1b[1;31m              \\x1b[0m\\x1b[2;32m              \\x1b[0m \\x1b[2;34m \\x1b[0m\\x1b[2;3;34mMenace\\x1b[0m\\x1b[2;34m                         \\x1b[0m\\x1b[2;34m \\x1b[0m \\x1b[2;36m                   \\x1b[0m \\x1b[2;35m                \\x1b[0m \\n\\x1b[1;31m              \\x1b[0m                                                                                      \\n\\x1b[1;31m \\x1b[0m\\x1b[1;31m   Syntax   \\x1b[0m\\x1b[1;31m \\x1b[0m\\x1b[1;38;2;227;227;221;48;2;39;40;34m  \\x1b[0m\\x1b[38;2;101;102;96;48;2;39;40;34m 1 \\x1b[0m\\x1b[38;2;102;217;239;48;2;39;40;34mdef\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m \\x1b[0m\\x1b[38;2;166;226;46;48;2;39;40;34miter_last\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m(\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34mvalues\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m:\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m \\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34mIterable\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m[\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34mT\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m]\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m)\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m \\x1b[0m\\x1b[38;2;255;70;137;48;2;39;40;34m-\\x1b[0m\\x1b[38;2;255;70;137;48;2;39;40;34m>\\x1b[0m  \\x1b[1m{\\x1b[0m                                         \\n\\x1b[1;31m \\x1b[0m\\x1b[1;31mhighlighting\\x1b[0m\\x1b[1;31m \\x1b[0m\\x1b[1;38;2;227;227;221;48;2;39;40;34m  \\x1b[0m\\x1b[38;2;101;102;96;48;2;39;40;34m 2 \\x1b[0m\\x1b[2;38;2;149;144;119;48;2;39;40;34m│   \\x1b[0m\\x1b[38;2;230;219;116;48;2;39;40;34m\\\"\\\"\\\"Iterate and generate a tuple w\\x1b[0m  \\x1b[2;32m│   \\x1b[0m\\x1b[32m'foo'\\x1b[0m: \\x1b[1m[\\x1b[0m                              \\n\\x1b[1;31m \\x1b[0m\\x1b[1;31m     &      \\x1b[0m\\x1b[1;31m \\x1b[0m\\x1b[1;38;2;227;227;221;48;2;39;40;34m  \\x1b[0m\\x1b[38;2;101;102;96;48;2;39;40;34m 3 \\x1b[0m\\x1b[2;38;2;149;144;119;48;2;39;40;34m│   \\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34miter_values\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m \\x1b[0m\\x1b[38;2;255;70;137;48;2;39;40;34m=\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m \\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34miter\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m(\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34mvalues\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m)\\x1b[0m\\x1b[48;2;39;40;34m       \\x1b[0m  \\x1b[2;32m│   │   \\x1b[0m\\x1b[1;36m3.1427\\x1b[0m,                           \\n\\x1b[1;31m \\x1b[0m\\x1b[1;31m   pretty   \\x1b[0m\\x1b[1;31m \\x1b[0m\\x1b[1;38;2;227;227;221;48;2;39;40;34m  \\x1b[0m\\x1b[38;2;101;102;96;48;2;39;40;34m 4 \\x1b[0m\\x1b[2;38;2;149;144;119;48;2;39;40;34m│   \\x1b[0m\\x1b[38;2;102;217;239;48;2;39;40;34mtry\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m:\\x1b[0m\\x1b[48;2;39;40;34m                             \\x1b[0m  \\x1b[2;32m│   │   \\x1b[0m\\x1b[1m(\\x1b[0m                                 \\n\\x1b[1;31m \\x1b[0m\\x1b[1;31m  printing  \\x1b[0m\\x1b[1;31m \\x1b[0m\\x1b[1;38;2;227;227;221;48;2;39;40;34m  \\x1b[0m\\x1b[38;2;101;102;96;48;2;39;40;34m 5 \\x1b[0m\\x1b[2;38;2;149;144;119;48;2;39;40;34m│   │   \\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34mprevious_value\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m \\x1b[0m\\x1b[38;2;255;70;137;48;2;39;40;34m=\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m \\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34mnext\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m(\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34miter_va\\x1b[0m  \\x1b[2;32m│   │   │   \\x1b[0m\\x1b[32m'Paul Atreides'\\x1b[0m,              \\n\\x1b[1;31m              \\x1b[0m\\x1b[1;38;2;227;227;221;48;2;39;40;34m  \\x1b[0m\\x1b[38;2;101;102;96;48;2;39;40;34m 6 \\x1b[0m\\x1b[2;38;2;149;144;119;48;2;39;40;34m│   \\x1b[0m\\x1b[38;2;102;217;239;48;2;39;40;34mexcept\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m \\x1b[0m\\x1b[38;2;166;226;46;48;2;39;40;34mStopIteration\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m:\\x1b[0m\\x1b[48;2;39;40;34m            \\x1b[0m  \\x1b[2;32m│   │   │   \\x1b[0m\\x1b[32m'Vladimir Harkonnen'\\x1b[0m,         \\n\\x1b[1;31m              \\x1b[0m\\x1b[1;38;2;227;227;221;48;2;39;40;34m  \\x1b[0m\\x1b[38;2;101;102;96;48;2;39;40;34m 7 \\x1b[0m\\x1b[2;38;2;149;144;119;48;2;39;40;34m│   │   \\x1b[0m\\x1b[38;2;102;217;239;48;2;39;40;34mreturn\\x1b[0m\\x1b[48;2;39;40;34m                       \\x1b[0m  \\x1b[2;32m│   │   │   \\x1b[0m\\x1b[32m'Thufir Hawat'\\x1b[0m                \\n\\x1b[1;31m              \\x1b[0m\\x1b[1;38;2;227;227;221;48;2;39;40;34m  \\x1b[0m\\x1b[38;2;101;102;96;48;2;39;40;34m 8 \\x1b[0m\\x1b[2;38;2;149;144;119;48;2;39;40;34m│   \\x1b[0m\\x1b[38;2;102;217;239;48;2;39;40;34mfor\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m \\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34mvalue\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m \\x1b[0m\\x1b[38;2;255;70;137;48;2;39;40;34min\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m \\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34miter_values\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m:\\x1b[0m\\x1b[48;2;39;40;34m        \\x1b[0m  \\x1b[2;32m│   │   \\x1b[0m\\x1b[1m)\\x1b[0m                                 \\n\\x1b[1;31m              \\x1b[0m\\x1b[1;38;2;227;227;221;48;2;39;40;34m  \\x1b[0m\\x1b[38;2;101;102;96;48;2;39;40;34m 9 \\x1b[0m\\x1b[2;38;2;149;144;119;48;2;39;40;34m│   │   \\x1b[0m\\x1b[38;2;102;217;239;48;2;39;40;34myield\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m \\x1b[0m\\x1b[38;2;102;217;239;48;2;39;40;34mFalse\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m,\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m \\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34mprevious_value\\x1b[0m\\x1b[48;2;39;40;34m  \\x1b[0m  \\x1b[2;32m│   \\x1b[0m\\x1b[1m]\\x1b[0m,                                    \\n\\x1b[1;31m              \\x1b[0m\\x1b[1;38;2;227;227;221;48;2;39;40;34m  \\x1b[0m\\x1b[38;2;101;102;96;48;2;39;40;34m10 \\x1b[0m\\x1b[2;38;2;149;144;119;48;2;39;40;34m│   │   \\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34mprevious_value\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m \\x1b[0m\\x1b[38;2;255;70;137;48;2;39;40;34m=\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m \\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34mvalue\\x1b[0m\\x1b[48;2;39;40;34m       \\x1b[0m  \\x1b[2;32m│   \\x1b[0m\\x1b[32m'atomic'\\x1b[0m: \\x1b[1m(\\x1b[0m\\x1b[3;91mFalse\\x1b[0m, \\x1b[3;92mTrue\\x1b[0m, \\x1b[3;35mNone\\x1b[0m\\x1b[1m)\\x1b[0m         \\n\\x1b[1;31m              \\x1b[0m\\x1b[1;38;2;227;227;221;48;2;39;40;34m  \\x1b[0m\\x1b[38;2;101;102;96;48;2;39;40;34m11 \\x1b[0m\\x1b[2;38;2;149;144;119;48;2;39;40;34m│   \\x1b[0m\\x1b[38;2;102;217;239;48;2;39;40;34myield\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m \\x1b[0m\\x1b[38;2;102;217;239;48;2;39;40;34mTrue\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m,\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m \\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34mprevious_value\\x1b[0m\\x1b[48;2;39;40;34m       \\x1b[0m  \\x1b[1m}\\x1b[0m                                         \\n\\x1b[1;31m              \\x1b[0m                                                                                      \\n\\x1b[1;31m \\x1b[0m\\x1b[1;31m  Markdown  \\x1b[0m\\x1b[1;31m \\x1b[0m\\x1b[36m# Markdown\\x1b[0m                                  ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓ \\n\\x1b[1;31m              \\x1b[0m                                            ┃               \\x1b[1mMarkdown\\x1b[0m                ┃ \\n\\x1b[1;31m              \\x1b[0m\\x1b[36mSupports much of the *markdown* \\x1b[0m            ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛ \\n\\x1b[1;31m              \\x1b[0m\\x1b[36m__syntax__!\\x1b[0m                                                                           \\n\\x1b[1;31m              \\x1b[0m                                            Supports much of the \\x1b[3mmarkdown\\x1b[0m \\x1b[1msyntax\\x1b[0m!     \\n\\x1b[1;31m              \\x1b[0m\\x1b[36m- Headers\\x1b[0m                                                                             \\n\\x1b[1;31m              \\x1b[0m\\x1b[36m- Basic formatting: **bold**, *italic*, \\x1b[0m    \\x1b[1;33m • \\x1b[0mHeaders                                \\n\\x1b[1;31m              \\x1b[0m\\x1b[36m`code`\\x1b[0m                                      \\x1b[1;33m • \\x1b[0mBasic formatting: \\x1b[1mbold\\x1b[0m, \\x1b[3mitalic\\x1b[0m, \\x1b[1;36;40mcode\\x1b[0m   \\n\\x1b[1;31m              \\x1b[0m\\x1b[36m- Block quotes\\x1b[0m                              \\x1b[1;33m • \\x1b[0mBlock quotes                           \\n\\x1b[1;31m              \\x1b[0m\\x1b[36m- Lists, and more...\\x1b[0m                        \\x1b[1;33m • \\x1b[0mLists, and more...                     \\n\\x1b[1;31m              \\x1b[0m\\x1b[36m    \\x1b[0m                                                                                  \\n\\x1b[1;31m              \\x1b[0m                                                                                      \\n\\x1b[1;31m \\x1b[0m\\x1b[1;31m   +more!   \\x1b[0m\\x1b[1;31m \\x1b[0mProgress bars, columns, styled logging handler, tracebacks, etc...                    \\n\\x1b[1;31m              \\x1b[0m                                                                                      \\n\"\n",
    "tests/conftest.py": "import pytest\n\n\n@pytest.fixture(autouse=True)\ndef reset_color_envvars(monkeypatch):\n    \"\"\"Remove color-related envvars to fix test output\"\"\"\n    monkeypatch.delenv(\"FORCE_COLOR\", raising=False)\n    monkeypatch.delenv(\"NO_COLOR\", raising=False)\n",
    "tests/render.py": "import io\nimport re\n\nfrom rich.console import Console, RenderableType\n\n\nre_link_ids = re.compile(r\"id=[\\d.\\-]*?;.*?\\x1b\")\n\n\ndef replace_link_ids(render: str) -> str:\n    \"\"\"Link IDs have a random ID and system path which is a problem for\n    reproducible tests.\n\n    \"\"\"\n    return re_link_ids.sub(\"id=0;foo\\x1b\", render)\n\n\ndef render(renderable: RenderableType, no_wrap: bool = False) -> str:\n    console = Console(\n        width=100, file=io.StringIO(), color_system=\"truecolor\", legacy_windows=False\n    )\n    console.print(renderable, no_wrap=no_wrap)\n    output = replace_link_ids(console.file.getvalue())\n    return output\n",
    "tests/test_align.py": "import io\n\nimport pytest\n\nfrom rich.console import Console\nfrom rich.align import Align, VerticalCenter\nfrom rich.measure import Measurement\n\n\ndef test_bad_align_legal():\n    # Legal\n    Align(\"foo\", \"left\")\n    Align(\"foo\", \"center\")\n    Align(\"foo\", \"right\")\n\n    # illegal\n    with pytest.raises(ValueError):\n        Align(\"foo\", None)\n    with pytest.raises(ValueError):\n        Align(\"foo\", \"middle\")\n    with pytest.raises(ValueError):\n        Align(\"foo\", \"\")\n    with pytest.raises(ValueError):\n        Align(\"foo\", \"LEFT\")\n    with pytest.raises(ValueError):\n        Align(\"foo\", vertical=\"somewhere\")\n\n\ndef test_repr():\n    repr(Align(\"foo\", \"left\"))\n    repr(Align(\"foo\", \"center\"))\n    repr(Align(\"foo\", \"right\"))\n\n\ndef test_align_left():\n    console = Console(file=io.StringIO(), width=10)\n    console.print(Align(\"foo\", \"left\"))\n    assert console.file.getvalue() == \"foo       \\n\"\n\n\ndef test_align_center():\n    console = Console(file=io.StringIO(), width=10)\n    console.print(Align(\"foo\", \"center\"))\n    assert console.file.getvalue() == \"   foo    \\n\"\n\n\ndef test_align_right():\n    console = Console(file=io.StringIO(), width=10)\n    console.print(Align(\"foo\", \"right\"))\n    assert console.file.getvalue() == \"       foo\\n\"\n\n\ndef test_align_top():\n    console = Console(file=io.StringIO(), width=10)\n    console.print(Align(\"foo\", vertical=\"top\"), height=5)\n    expected = \"foo       \\n          \\n          \\n          \\n          \\n\"\n    result = console.file.getvalue()\n    print(repr(result))\n    assert result == expected\n\n\ndef test_align_middle():\n    console = Console(file=io.StringIO(), width=10)\n    console.print(Align(\"foo\", vertical=\"middle\"), height=5)\n    expected = \"          \\n          \\nfoo       \\n          \\n          \\n\"\n    result = console.file.getvalue()\n    print(repr(result))\n    assert result == expected\n\n\ndef test_align_bottom():\n    console = Console(file=io.StringIO(), width=10)\n    console.print(Align(\"foo\", vertical=\"bottom\"), height=5)\n    expected = \"          \\n          \\n          \\n          \\nfoo       \\n\"\n    result = console.file.getvalue()\n    print(repr(result))\n    assert result == expected\n\n\ndef test_align_center_middle():\n    console = Console(file=io.StringIO(), width=10)\n    console.print(Align(\"foo\\nbar\", \"center\", vertical=\"middle\"), height=5)\n    expected = \"          \\n   foo    \\n   bar    \\n          \\n          \\n\"\n    result = console.file.getvalue()\n    print(repr(result))\n    assert result == expected\n\n\ndef test_align_fit():\n    console = Console(file=io.StringIO(), width=10)\n    console.print(Align(\"foobarbaze\", \"center\"))\n    assert console.file.getvalue() == \"foobarbaze\\n\"\n\n\ndef test_align_right_style():\n    console = Console(\n        file=io.StringIO(),\n        width=10,\n        color_system=\"truecolor\",\n        force_terminal=True,\n        _environ={},\n    )\n    console.print(Align(\"foo\", \"right\", style=\"on blue\"))\n    assert console.file.getvalue() == \"\\x1b[44m       \\x1b[0m\\x1b[44mfoo\\x1b[0m\\n\"\n\n\ndef test_measure():\n    console = Console(file=io.StringIO(), width=20)\n    _min, _max = Measurement.get(console, console.options, Align(\"foo bar\", \"left\"))\n    assert _min == 3\n    assert _max == 7\n\n\ndef test_align_no_pad():\n    console = Console(file=io.StringIO(), width=10)\n    console.print(Align(\"foo\", \"center\", pad=False))\n    console.print(Align(\"foo\", \"left\", pad=False))\n    assert console.file.getvalue() == \"   foo\\nfoo\\n\"\n\n\ndef test_align_width():\n    console = Console(file=io.StringIO(), width=40)\n    words = \"Deep in the human unconscious is a pervasive need for a logical universe that makes sense. But the real universe is always one step beyond logic\"\n    console.print(Align(words, \"center\", width=30))\n    result = console.file.getvalue()\n    expected = \"     Deep in the human unconscious      \\n     is a pervasive need for a          \\n     logical universe that makes        \\n     sense. But the real universe       \\n     is always one step beyond          \\n     logic                              \\n\"\n    assert result == expected\n\n\ndef test_shortcuts():\n    assert Align.left(\"foo\").align == \"left\"\n    assert Align.left(\"foo\").renderable == \"foo\"\n    assert Align.right(\"foo\").align == \"right\"\n    assert Align.right(\"foo\").renderable == \"foo\"\n    assert Align.center(\"foo\").align == \"center\"\n    assert Align.center(\"foo\").renderable == \"foo\"\n\n\ndef test_vertical_center():\n    console = Console(color_system=None, height=6)\n    console.begin_capture()\n    vertical_center = VerticalCenter(\"foo\")\n    repr(vertical_center)\n    console.print(vertical_center)\n    result = console.end_capture()\n    print(repr(result))\n    expected = \"   \\n   \\nfoo\\n   \\n   \\n   \\n\"\n    assert result == expected\n    assert Measurement.get(console, console.options, vertical_center) == Measurement(\n        3, 3\n    )\n",
    "tests/test_ansi.py": "import pytest\n\nfrom rich.ansi import AnsiDecoder\nfrom rich.console import Console\nfrom rich.style import Style\nfrom rich.text import Span, Text\n\n\ndef test_decode():\n    console = Console(\n        force_terminal=True, legacy_windows=False, color_system=\"truecolor\"\n    )\n    console.begin_capture()\n    console.print(\"Hello\")\n    console.print(\"[b]foo[/b]\")\n    console.print(\"[link http://example.org]bar\")\n    console.print(\"[#ff0000 on color(200)]red\")\n    console.print(\"[color(200) on #ff0000]red\")\n    terminal_codes = console.end_capture()\n\n    decoder = AnsiDecoder()\n    lines = list(decoder.decode(terminal_codes))\n\n    expected = [\n        Text(\"Hello\"),\n        Text(\"foo\", spans=[Span(0, 3, Style.parse(\"bold\"))]),\n        Text(\"bar\", spans=[Span(0, 3, Style.parse(\"link http://example.org\"))]),\n        Text(\"red\", spans=[Span(0, 3, Style.parse(\"#ff0000 on color(200)\"))]),\n        Text(\"red\", spans=[Span(0, 3, Style.parse(\"color(200) on #ff0000\"))]),\n    ]\n\n    assert lines == expected\n\n\ndef test_decode_example():\n    ansi_bytes = b\"\\x1b[01m\\x1b[KC:\\\\Users\\\\stefa\\\\AppData\\\\Local\\\\Temp\\\\tmp3ydingba:\\x1b[m\\x1b[K In function '\\x1b[01m\\x1b[Kmain\\x1b[m\\x1b[K':\\n\\x1b[01m\\x1b[KC:\\\\Users\\\\stefa\\\\AppData\\\\Local\\\\Temp\\\\tmp3ydingba:3:5:\\x1b[m\\x1b[K \\x1b[01;35m\\x1b[Kwarning: \\x1b[m\\x1b[Kunused variable '\\x1b[01m\\x1b[Ka\\x1b[m\\x1b[K' [\\x1b[01;35m\\x1b[K-Wunused-variable\\x1b[m\\x1b[K]\\n    3 | int \\x1b[01;35m\\x1b[Ka\\x1b[m\\x1b[K=1;\\n      |     \\x1b[01;35m\\x1b[K^\\x1b[m\\x1b[K\\n\"\n    ansi_text = ansi_bytes.decode(\"utf-8\")\n\n    text = Text.from_ansi(ansi_text)\n\n    console = Console(\n        force_terminal=True, legacy_windows=False, color_system=\"truecolor\"\n    )\n    with console.capture() as capture:\n        console.print(text)\n    result = capture.get()\n    print(repr(result))\n    expected = \"\\x1b[1mC:\\\\Users\\\\stefa\\\\AppData\\\\Local\\\\Temp\\\\tmp3ydingba:\\x1b[0m In function '\\x1b[1mmain\\x1b[0m':\\n\\x1b[1mC:\\\\Users\\\\stefa\\\\AppData\\\\Local\\\\Temp\\\\tmp3ydingba:3:5:\\x1b[0m \\x1b[1;35mwarning: \\x1b[0munused variable '\\x1b[1ma\\x1b[0m' \\n[\\x1b[1;35m-Wunused-variable\\x1b[0m]\\n    3 | int \\x1b[1;35ma\\x1b[0m=1;\\n      |     \\x1b[1;35m^\\x1b[0m\\n\"\n    assert result == expected\n\n\n@pytest.mark.parametrize(\n    \"ansi_bytes, expected_text\",\n    [\n        # https://github.com/Textualize/rich/issues/2688\n        (\n            b\"\\x1b[31mFound 4 errors in 2 files (checked 18 source files)\\x1b(B\\x1b[m\\n\",\n            \"Found 4 errors in 2 files (checked 18 source files)\",\n        ),\n        # https://mail.python.org/pipermail/python-list/2007-December/424756.html\n        (b\"Hallo\", \"Hallo\"),\n        (b\"\\x1b(BHallo\", \"Hallo\"),\n        (b\"\\x1b(JHallo\", \"Hallo\"),\n        (b\"\\x1b(BHal\\x1b(Jlo\", \"Hallo\"),\n    ],\n)\ndef test_decode_issue_2688(ansi_bytes, expected_text):\n    text = Text.from_ansi(ansi_bytes.decode())\n\n    assert str(text) == expected_text\n\n\n@pytest.mark.parametrize(\"code\", [*\"0123456789:;<=>?\"])\ndef test_strip_private_escape_sequences(code):\n    text = Text.from_ansi(f\"\\x1b{code}x\")\n\n    console = Console(force_terminal=True)\n\n    with console.capture() as capture:\n        console.print(text)\n\n    expected = \"x\\n\"\n\n    assert capture.get() == expected\n",
    "tests/test_bar.py": "from rich.console import Console\nfrom rich.progress_bar import ProgressBar\nfrom rich.segment import Segment\nfrom rich.style import Style\n\nfrom .render import render\n\n\ndef test_init():\n    bar = ProgressBar(completed=50)\n    repr(bar)\n    assert bar.percentage_completed == 50.0\n\n\ndef test_update():\n    bar = ProgressBar()\n    assert bar.completed == 0\n    assert bar.total == 100\n    bar.update(10, 20)\n    assert bar.completed == 10\n    assert bar.total == 20\n    assert bar.percentage_completed == 50\n    bar.update(100)\n    assert bar.percentage_completed == 100\n\n\nexpected = [\n    \"\\x1b[38;2;249;38;114m━━━━━\\x1b[0m\\x1b[38;2;249;38;114m╸\\x1b[0m\\x1b[38;5;237m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\\x1b[0m\",\n    \"\\x1b[38;2;249;38;114m━━━━━━\\x1b[0m\\x1b[38;5;237m╺\\x1b[0m\\x1b[38;5;237m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\\x1b[0m\",\n]\n\n\ndef test_render():\n    bar = ProgressBar(completed=11, width=50)\n    bar_render = render(bar)\n    assert bar_render == expected[0]\n    bar.update(completed=12)\n    bar_render = render(bar)\n    assert bar_render == expected[1]\n\n\ndef test_measure():\n    console = Console(width=120)\n    bar = ProgressBar()\n    measurement = bar.__rich_measure__(console, console.options)\n    assert measurement.minimum == 4\n    assert measurement.maximum == 120\n\n\ndef test_zero_total():\n    # Shouldn't throw zero division error\n    bar = ProgressBar(total=0)\n    render(bar)\n\n\ndef test_pulse():\n    bar = ProgressBar(pulse=True, animation_time=10)\n    bar_render = render(bar)\n    print(repr(bar_render))\n    expected = \"\\x1b[38;2;249;38;114m━\\x1b[0m\\x1b[38;2;244;38;112m━\\x1b[0m\\x1b[38;2;230;39;108m━\\x1b[0m\\x1b[38;2;209;42;102m━\\x1b[0m\\x1b[38;2;183;44;94m━\\x1b[0m\\x1b[38;2;153;48;86m━\\x1b[0m\\x1b[38;2;123;51;77m━\\x1b[0m\\x1b[38;2;97;53;69m━\\x1b[0m\\x1b[38;2;76;56;63m━\\x1b[0m\\x1b[38;2;62;57;59m━\\x1b[0m\\x1b[38;2;58;58;58m━\\x1b[0m\\x1b[38;2;62;57;59m━\\x1b[0m\\x1b[38;2;76;56;63m━\\x1b[0m\\x1b[38;2;97;53;69m━\\x1b[0m\\x1b[38;2;123;51;77m━\\x1b[0m\\x1b[38;2;153;48;86m━\\x1b[0m\\x1b[38;2;183;44;94m━\\x1b[0m\\x1b[38;2;209;42;102m━\\x1b[0m\\x1b[38;2;230;39;108m━\\x1b[0m\\x1b[38;2;244;38;112m━\\x1b[0m\\x1b[38;2;249;38;114m━\\x1b[0m\\x1b[38;2;244;38;112m━\\x1b[0m\\x1b[38;2;230;39;108m━\\x1b[0m\\x1b[38;2;209;42;102m━\\x1b[0m\\x1b[38;2;183;44;94m━\\x1b[0m\\x1b[38;2;153;48;86m━\\x1b[0m\\x1b[38;2;123;51;77m━\\x1b[0m\\x1b[38;2;97;53;69m━\\x1b[0m\\x1b[38;2;76;56;63m━\\x1b[0m\\x1b[38;2;62;57;59m━\\x1b[0m\\x1b[38;2;58;58;58m━\\x1b[0m\\x1b[38;2;62;57;59m━\\x1b[0m\\x1b[38;2;76;56;63m━\\x1b[0m\\x1b[38;2;97;53;69m━\\x1b[0m\\x1b[38;2;123;51;77m━\\x1b[0m\\x1b[38;2;153;48;86m━\\x1b[0m\\x1b[38;2;183;44;94m━\\x1b[0m\\x1b[38;2;209;42;102m━\\x1b[0m\\x1b[38;2;230;39;108m━\\x1b[0m\\x1b[38;2;244;38;112m━\\x1b[0m\\x1b[38;2;249;38;114m━\\x1b[0m\\x1b[38;2;244;38;112m━\\x1b[0m\\x1b[38;2;230;39;108m━\\x1b[0m\\x1b[38;2;209;42;102m━\\x1b[0m\\x1b[38;2;183;44;94m━\\x1b[0m\\x1b[38;2;153;48;86m━\\x1b[0m\\x1b[38;2;123;51;77m━\\x1b[0m\\x1b[38;2;97;53;69m━\\x1b[0m\\x1b[38;2;76;56;63m━\\x1b[0m\\x1b[38;2;62;57;59m━\\x1b[0m\\x1b[38;2;58;58;58m━\\x1b[0m\\x1b[38;2;62;57;59m━\\x1b[0m\\x1b[38;2;76;56;63m━\\x1b[0m\\x1b[38;2;97;53;69m━\\x1b[0m\\x1b[38;2;123;51;77m━\\x1b[0m\\x1b[38;2;153;48;86m━\\x1b[0m\\x1b[38;2;183;44;94m━\\x1b[0m\\x1b[38;2;209;42;102m━\\x1b[0m\\x1b[38;2;230;39;108m━\\x1b[0m\\x1b[38;2;244;38;112m━\\x1b[0m\\x1b[38;2;249;38;114m━\\x1b[0m\\x1b[38;2;244;38;112m━\\x1b[0m\\x1b[38;2;230;39;108m━\\x1b[0m\\x1b[38;2;209;42;102m━\\x1b[0m\\x1b[38;2;183;44;94m━\\x1b[0m\\x1b[38;2;153;48;86m━\\x1b[0m\\x1b[38;2;123;51;77m━\\x1b[0m\\x1b[38;2;97;53;69m━\\x1b[0m\\x1b[38;2;76;56;63m━\\x1b[0m\\x1b[38;2;62;57;59m━\\x1b[0m\\x1b[38;2;58;58;58m━\\x1b[0m\\x1b[38;2;62;57;59m━\\x1b[0m\\x1b[38;2;76;56;63m━\\x1b[0m\\x1b[38;2;97;53;69m━\\x1b[0m\\x1b[38;2;123;51;77m━\\x1b[0m\\x1b[38;2;153;48;86m━\\x1b[0m\\x1b[38;2;183;44;94m━\\x1b[0m\\x1b[38;2;209;42;102m━\\x1b[0m\\x1b[38;2;230;39;108m━\\x1b[0m\\x1b[38;2;244;38;112m━\\x1b[0m\\x1b[38;2;249;38;114m━\\x1b[0m\\x1b[38;2;244;38;112m━\\x1b[0m\\x1b[38;2;230;39;108m━\\x1b[0m\\x1b[38;2;209;42;102m━\\x1b[0m\\x1b[38;2;183;44;94m━\\x1b[0m\\x1b[38;2;153;48;86m━\\x1b[0m\\x1b[38;2;123;51;77m━\\x1b[0m\\x1b[38;2;97;53;69m━\\x1b[0m\\x1b[38;2;76;56;63m━\\x1b[0m\\x1b[38;2;62;57;59m━\\x1b[0m\\x1b[38;2;58;58;58m━\\x1b[0m\\x1b[38;2;62;57;59m━\\x1b[0m\\x1b[38;2;76;56;63m━\\x1b[0m\\x1b[38;2;97;53;69m━\\x1b[0m\\x1b[38;2;123;51;77m━\\x1b[0m\\x1b[38;2;153;48;86m━\\x1b[0m\\x1b[38;2;183;44;94m━\\x1b[0m\\x1b[38;2;209;42;102m━\\x1b[0m\\x1b[38;2;230;39;108m━\\x1b[0m\\x1b[38;2;244;38;112m━\\x1b[0m\"\n    assert bar_render == expected\n\n\ndef test_get_pulse_segments():\n    bar = ProgressBar()\n    segments = bar._get_pulse_segments(\n        Style.parse(\"red\"), Style.parse(\"yellow\"), None, False, False\n    )\n    print(repr(segments))\n    expected = [\n        Segment(\"━\", Style.parse(\"red\")),\n        Segment(\"━\", Style.parse(\"red\")),\n        Segment(\"━\", Style.parse(\"red\")),\n        Segment(\"━\", Style.parse(\"red\")),\n        Segment(\"━\", Style.parse(\"red\")),\n        Segment(\"━\", Style.parse(\"red\")),\n        Segment(\"━\", Style.parse(\"red\")),\n        Segment(\"━\", Style.parse(\"red\")),\n        Segment(\"━\", Style.parse(\"red\")),\n        Segment(\"━\", Style.parse(\"red\")),\n        Segment(\"━\", Style.parse(\"yellow\")),\n        Segment(\"━\", Style.parse(\"yellow\")),\n        Segment(\"━\", Style.parse(\"yellow\")),\n        Segment(\"━\", Style.parse(\"yellow\")),\n        Segment(\"━\", Style.parse(\"yellow\")),\n        Segment(\"━\", Style.parse(\"yellow\")),\n        Segment(\"━\", Style.parse(\"yellow\")),\n        Segment(\"━\", Style.parse(\"yellow\")),\n        Segment(\"━\", Style.parse(\"yellow\")),\n        Segment(\"━\", Style.parse(\"yellow\")),\n    ]\n    assert segments == expected\n\n\nif __name__ == \"__main__\":\n    bar = ProgressBar(completed=11, width=50)\n    bar_render = render(bar)\n    print(repr(bar_render))\n    bar.update(completed=12)\n    bar_render = render(bar)\n    print(repr(bar_render))\n",
    "tests/test_block_bar.py": "from rich.bar import Bar\nfrom rich.console import Console\n\nfrom .render import render\n\n\nexpected = [\n    \"\\x1b[39;49m     ▐█████████████████████████                   \\x1b[0m\\n\",\n    \"\\x1b[39;49m      ██████████████████████▌                     \\x1b[0m\\n\",\n    \"\\x1b[39;49m                                                  \\x1b[0m\\n\",\n]\n\n\ndef test_repr():\n    bar = Bar(size=100, begin=11, end=62, width=50)\n    assert repr(bar) == \"Bar(100, 11, 62)\"\n\n\ndef test_render():\n    bar = Bar(size=100, begin=11, end=62, width=50)\n    bar_render = render(bar)\n    assert bar_render == expected[0]\n    bar = Bar(size=100, begin=12, end=57, width=50)\n    bar_render = render(bar)\n    assert bar_render == expected[1]\n    # begin after end\n    bar = Bar(size=100, begin=60, end=40, width=50)\n    bar_render = render(bar)\n    assert bar_render == expected[2]\n\n\ndef test_measure():\n    console = Console(width=120)\n    bar = Bar(size=100, begin=11, end=62)\n    measurement = bar.__rich_measure__(console, console.options)\n    assert measurement.minimum == 4\n    assert measurement.maximum == 120\n\n\ndef test_zero_total():\n    # Shouldn't throw zero division error\n    bar = Bar(size=0, begin=0, end=0)\n    render(bar)\n\n\nif __name__ == \"__main__\":\n    bar = Bar(size=100, begin=11, end=62, width=50)\n    bar_render = render(bar)\n    print(repr(bar_render))\n    bar = Bar(size=100, begin=12, end=57, width=50)\n    bar_render = render(bar)\n    print(repr(bar_render))\n    bar = Bar(size=100, begin=60, end=40, width=50)\n    bar_render = render(bar)\n    print(repr(bar_render))\n",
    "tests/test_box.py": "import pytest\n\nfrom rich.console import ConsoleOptions, ConsoleDimensions\nfrom rich.box import (\n    ASCII,\n    DOUBLE,\n    ROUNDED,\n    HEAVY,\n    SQUARE,\n    MINIMAL_HEAVY_HEAD,\n    MINIMAL,\n    SIMPLE_HEAVY,\n    SIMPLE,\n    HEAVY_EDGE,\n    HEAVY_HEAD,\n)\n\n\ndef test_str():\n    assert str(ASCII) == \"+--+\\n| ||\\n|-+|\\n| ||\\n|-+|\\n|-+|\\n| ||\\n+--+\\n\"\n\n\ndef test_repr():\n    assert repr(ASCII) == \"Box(...)\"\n\n\ndef test_get_top():\n    top = HEAVY.get_top(widths=[1, 2])\n    assert top == \"┏━┳━━┓\"\n\n\ndef test_get_row():\n    head_row = DOUBLE.get_row(widths=[3, 2, 1], level=\"head\")\n    assert head_row == \"╠═══╬══╬═╣\"\n\n    row = ASCII.get_row(widths=[1, 2, 3], level=\"row\")\n    assert row == \"|-+--+---|\"\n\n    foot_row = ROUNDED.get_row(widths=[2, 1, 3], level=\"foot\")\n    assert foot_row == \"├──┼─┼───┤\"\n\n    with pytest.raises(ValueError):\n        ROUNDED.get_row(widths=[1, 2, 3], level=\"FOO\")\n\n\ndef test_get_bottom():\n    bottom = HEAVY.get_bottom(widths=[1, 2, 3])\n    assert bottom == \"┗━┻━━┻━━━┛\"\n\n\ndef test_box_substitute_for_same_box():\n    options = ConsoleOptions(\n        ConsoleDimensions(80, 25),\n        legacy_windows=False,\n        min_width=1,\n        max_width=100,\n        is_terminal=True,\n        encoding=\"utf-8\",\n        max_height=25,\n    )\n\n    assert ROUNDED.substitute(options) == ROUNDED\n    assert MINIMAL_HEAVY_HEAD.substitute(options) == MINIMAL_HEAVY_HEAD\n    assert SIMPLE_HEAVY.substitute(options) == SIMPLE_HEAVY\n    assert HEAVY.substitute(options) == HEAVY\n    assert HEAVY_EDGE.substitute(options) == HEAVY_EDGE\n    assert HEAVY_HEAD.substitute(options) == HEAVY_HEAD\n\n\ndef test_box_substitute_for_different_box_legacy_windows():\n    options = ConsoleOptions(\n        ConsoleDimensions(80, 25),\n        legacy_windows=True,\n        min_width=1,\n        max_width=100,\n        is_terminal=True,\n        encoding=\"utf-8\",\n        max_height=25,\n    )\n\n    assert ROUNDED.substitute(options) == SQUARE\n    assert MINIMAL_HEAVY_HEAD.substitute(options) == MINIMAL\n    assert SIMPLE_HEAVY.substitute(options) == SIMPLE\n    assert HEAVY.substitute(options) == SQUARE\n    assert HEAVY_EDGE.substitute(options) == SQUARE\n    assert HEAVY_HEAD.substitute(options) == SQUARE\n\n\ndef test_box_substitute_for_different_box_ascii_encoding():\n    options = ConsoleOptions(\n        ConsoleDimensions(80, 25),\n        legacy_windows=True,\n        min_width=1,\n        max_width=100,\n        is_terminal=True,\n        encoding=\"ascii\",\n        max_height=25,\n    )\n\n    assert ROUNDED.substitute(options) == ASCII\n    assert MINIMAL_HEAVY_HEAD.substitute(options) == ASCII\n    assert SIMPLE_HEAVY.substitute(options) == ASCII\n    assert HEAVY.substitute(options) == ASCII\n    assert HEAVY_EDGE.substitute(options) == ASCII\n    assert HEAVY_HEAD.substitute(options) == ASCII\n",
    "tests/test_card.py": "import io\nimport re\n\nfrom rich.__main__ import make_test_card\nfrom rich.console import Console, RenderableType\n\nfrom ._card_render import expected\n\nre_link_ids = re.compile(r\"id=[\\d\\.\\-]*?;.*?\\x1b\")\n\n\ndef replace_link_ids(render: str) -> str:\n    \"\"\"Link IDs have a random ID and system path which is a problem for\n    reproducible tests.\n\n    \"\"\"\n    return re_link_ids.sub(\"id=0;foo\\x1b\", render)\n\n\ndef render(renderable: RenderableType) -> str:\n    console = Console(\n        width=100, file=io.StringIO(), color_system=\"truecolor\", legacy_windows=False\n    )\n    console.print(renderable)\n    output = replace_link_ids(console.file.getvalue())\n    return output\n\n\ndef test_card_render():\n    card = make_test_card()\n    result = render(card)\n    print(repr(result))\n    assert result == expected\n\n\nif __name__ == \"__main__\":\n    card = make_test_card()\n    with open(\"_card_render.py\", \"wt\") as fh:\n        card_render = render(card)\n        print(card_render)\n        fh.write(f\"expected={card_render!r}\")\n"
  },
  "requirements": null
}