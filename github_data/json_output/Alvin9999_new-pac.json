{
  "repo_name": "Alvin9999/new-pac",
  "repo_url": "https://github.com/Alvin9999/new-pac",
  "description": "翻墙-科学上网、自由上网、免费科学上网、免费翻墙、fanqiang、油管youtube/视频下载、软件、VPN、一键翻墙浏览器，vps一键搭建翻墙服务器脚本/教程，免费shadowsocks/ss/ssr/v2ray/goflyway账号/节点，翻墙梯子，电脑、手机、iOS、安卓、windows、Mac、Linux、路由器翻墙、科学上网、youtube视频下载、youtube油管镜像/免翻墙网站、美区apple id共享账号、翻墙-科学上网-梯子",
  "stars": 59492,
  "language": "Python",
  "created_at": "2016-03-23T08:43:36Z",
  "updated_at": "2025-03-19T07:07:40Z",
  "files": {
    "update_v2ray_wiki.py": "import re\nimport os\nfrom datetime import datetime\nimport pytz\nimport base64\nimport json\n\n# ====== 文件路径设置 ======\nwiki_file = os.path.join(\"wiki\", \"v2ray免费账号.md\")  # Wiki 文件路径\n\n# ====== 获取当前北京时间 ======\nshanghai_tz = pytz.timezone(\"Asia/Shanghai\")\ncurrent_time = datetime.now(shanghai_tz).strftime(\"%Y年%m月%d日%H点%M分\")\n\n# ====== 读取文件内容 ======\nif not os.path.exists(wiki_file):\n    raise FileNotFoundError(f\"{wiki_file} 文件不存在，请检查路径。\")\n\nwith open(wiki_file, \"r\", encoding=\"utf-8\") as file:\n    content = file.read()\n\n# ====== 提取当前的 host ======\nhost_match = re.search(r\"伪装域名（host）\\s+\\|\\s+(y)(\\d+)(\\.582185\\.xyz)\", content)\nif not host_match:\n    raise ValueError(\"未找到有效的伪装域名（host）格式，请检查文件内容。\")\n\ncurrent_host_num = int(host_match.group(2))  # 提取当前 host 的数字部分\nnext_host_num = current_host_num + 1         # 计算下一次的数字\n\n# ====== 更新伪装域名（host） ======\ndef increment_host(match):\n    base = match.group(1)  # \"y\"\n    suffix = match.group(3)  # \".582185.xyz\"\n    return f\"{base}{next_host_num}{suffix}\"  # 替换为下一个数字\n\n# 更新表格中的伪装域名（host）\nupdated_content = re.sub(r\"(伪装域名（host）\\s+\\|\\s+y)(\\d+)(\\.582185\\.xyz)\", increment_host, content)\n\n# ====== 更新 vmess 链接 ======\ndef update_vmess(match):\n    # 解码 Base64\n    vmess_json = json.loads(base64.b64decode(match.group(1)).decode('utf-8'))\n    # 更新 host\n    if \"host\" in vmess_json:\n        base, num, suffix = re.match(r\"(y)(\\d+)(\\.582185\\.xyz)\", vmess_json[\"host\"]).groups()\n        vmess_json[\"host\"] = f\"{base}{next_host_num}{suffix}\"\n    # 更新 Base64 编码后的 vmess 链接\n    return f\"vmess://{base64.b64encode(json.dumps(vmess_json).encode('utf-8')).decode('utf-8')}\"\n\nupdated_content = re.sub(r\"vmess://([A-Za-z0-9+/=]+)\", update_vmess, updated_content)\n\n# ====== 更新更新时间 ======\nupdated_content = re.sub(\n    r\"\\*\\*更新时间：\\*\\* 北京时间\\d{4}年\\d{2}月\\d{2}日\\d{2}点\\d{2}分\",\n    f\"**更新时间：** 北京时间{current_time}\",\n    updated_content,\n)\n\n# ====== 写回更新内容 ======\nwith open(wiki_file, \"w\", encoding=\"utf-8\") as file:\n    file.write(updated_content)\n\nprint(f\"更新完成：节点 Host 已更新为 y{next_host_num}.582185.xyz，当前北京时间为 {current_time}。\")\n",
    "update_wiki_page.py": "import re\nimport os\nfrom datetime import datetime\nimport pytz  # 引入时区库\n\n# ====== 文件路径设置 ======\nwiki_file = os.path.join(\"wiki\", \"直翻通道.md\")  # Wiki 仓库中的文件\nreadme_file = os.path.join(\"README.md\")  # 主仓库根目录下的 README.md 文件\n\n# ====== 获取当前北京时间 ======\nshanghai_tz = pytz.timezone(\"Asia/Shanghai\")\ncurrent_time = datetime.now(shanghai_tz).strftime(\"%Y年%m月%d日%H点%M分\")\n\n# ====== 更新 Wiki 页面 ======\nif not os.path.exists(wiki_file):\n    raise FileNotFoundError(f\"{wiki_file} 不存在，请检查路径。\")\n\nwith open(wiki_file, \"r\", encoding=\"utf-8\") as file:\n    content = file.read()\n\n# 定义更新域名的函数（递增域名中的数字部分）\ndef increment_domain(match):\n    base = match.group(1)\n    num = int(match.group(2)) + 1  # 数字加 1\n    suffix = match.group(3)\n    return f\"{base}{num}{suffix}\"\n\n# 更新域名数字，适配单个域名 368314.xyz\nupdated_content = re.sub(r\"(fan)(\\d+)(\\.368314\\.xyz)\", increment_domain, content)\n\n# 替换时间部分为当前北京时间\nupdated_content = re.sub(\n    r\"北京时间\\d{4}年\\d{2}月\\d{2}日\\d{2}点\\d{2}分更新\",\n    f\"北京时间{current_time}更新\",\n    updated_content\n)\n\n# 写回更新内容\nwith open(wiki_file, \"w\", encoding=\"utf-8\") as file:\n    file.write(updated_content)\n\nprint(f\"Wiki 页面内容已更新：当前北京时间为 {current_time}\")\n\n# ====== 更新 README.md 文件 ======\nif not os.path.exists(readme_file):\n    raise FileNotFoundError(f\"{readme_file} 不存在，请检查路径。\")\n\nwith open(readme_file, \"r\", encoding=\"utf-8\") as file:\n    readme_content = file.read()\n\n# 替换 README.md 中的更新时间\nupdated_readme_content = re.sub(\n    r\"北京时间\\d{4}年\\d{2}月\\d{2}日\\d{2}点\\d{2}分更新\",\n    f\"北京时间{current_time}更新\",\n    readme_content\n)\n\n# 写回更新内容\nwith open(readme_file, \"w\", encoding=\"utf-8\") as file:\n    file.write(updated_readme_content)\n\nprint(f\"README.md 内容已更新：当前北京时间为 {current_time}\")\n"
  },
  "requirements": null
}